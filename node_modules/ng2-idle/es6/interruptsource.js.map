/**
 * ng2-idle - A module for responding to idle users in Angular2 applications.
 # @author Mike Grabski <me@mikegrabski.com> (http://mikegrabski.com/)
 * @version v1.0.0-alpha.18
 * @link https://github.com/HackedByChinese/ng2-idle.git#readme
 * @license MIT
 */
{"version":3,"sources":["interruptsource.ts"],"names":[],"mappings":"OAAO,EAAC,YAAY,EAAC,MAAM,eAAe;AAO1C;IAKE,YACc,QAA4C,EAC5C,QAA4C;QAD5C,aAAQ,GAAR,QAAQ,CAAoC;QAC5C,aAAQ,GAAR,QAAQ,CAAoC;QAN1D,eAAU,GAAY,KAAK,CAAC;QAErB,gBAAW,GAAgC,IAAI,YAAY,EAAiB,CAAC;IAIvB,CAAC;IAK9D,MAAM;QACJ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAKD,MAAM;QACJ,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtB,CAAC;QAED,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;AACH,CAAC;AAAA","file":"interruptsource.js","sourcesContent":["import {EventEmitter} from '@angular/core';\n\nimport {InterruptArgs} from './interruptargs';\n\n/*\n * A base for classes that act as a source for interrupts.\n */\nexport abstract class InterruptSource {\n  isAttached: boolean = false;\n\n  public onInterrupt: EventEmitter<InterruptArgs> = new EventEmitter<InterruptArgs>();\n\n  constructor(\n      protected attachFn?: (source: InterruptSource) => void,\n      protected detachFn?: (source: InterruptSource) => void) {}\n\n  /*\n   * Attaches to the specified events on the specified source.\n   */\n  attach(): void {\n    if (!this.isAttached && this.attachFn) {\n      this.attachFn(this);\n    }\n\n    this.isAttached = true;\n  }\n\n  /*\n   * Detaches from the specified events on the specified source.\n   */\n  detach(): void {\n    if (this.isAttached && this.detachFn) {\n      this.detachFn(this);\n    }\n\n    this.isAttached = false;\n  }\n}\n"],"sourceRoot":"/source/"}