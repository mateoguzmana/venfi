/**
 * ng2-idle - A module for responding to idle users in Angular2 applications.
 # @author Mike Grabski <me@mikegrabski.com> (http://mikegrabski.com/)
 * @version v1.0.0-alpha.18
 * @link https://github.com/HackedByChinese/ng2-idle.git#readme
 * @license MIT
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { NgModule } from '@angular/core';
import { Idle } from './idle';
import { IdleExpiry } from './idleexpiry';
import { SimpleExpiry } from './simpleexpiry';
let Ng2IdleModule_1;
export let Ng2IdleModule = Ng2IdleModule_1 = class Ng2IdleModule {
    static forRoot() {
        return {
            ngModule: Ng2IdleModule_1,
            providers: [SimpleExpiry, { provide: IdleExpiry, useExisting: SimpleExpiry }, Idle]
        };
    }
};
Ng2IdleModule = Ng2IdleModule_1 = __decorate([
    NgModule(), 
    __metadata('design:paramtypes', [])
], Ng2IdleModule);

//# sourceMappingURL=module.js.map
